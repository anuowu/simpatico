# ---------------------------------------------------------------------
# File: src/tools/patterns.mk
#
# This makefile fragment contains the pattern rule used to compile all 
# C++ sources files in the src/tools directory tree. The src/tools 
# directory contains all the source code for the Tools C++ namespace. 
#
# This file is included by all makefile files in the tools/ directory.
# This pattern file should be included in other makefiles after 
# inclusion of the main config.mk file, and the namespace level config 
# files named util/config.mk, simp/config.mk, and tools/config.mk,
# because the patterns defined in this file use makefile variables
# defined in these configuration files.
#-----------------------------------------------------------------------
# Makefile fragment includes

# Build configuration files
# Define *_DEFS macro definitions, paths to libraries and executables
include $(BLD_DIR)/util/config.mk
include $(BLD_DIR)/simp/config.mk
include $(BLD_DIR)/tools/config.mk

# Source file lists
# Include recipes to build library targets
include $(SRC_DIR)/util/sources.mk
include $(SRC_DIR)/simp/sources.mk
include $(SRC_DIR)/tools/sources.mk

#-----------------------------------------------------------------------
# Makefile variable definitions

# Lists of all required C preprocessor macro definitions 
UTIL_ADEF=$(UTIL_DEFS) 
SIMP_ADEF=$(UTIL_DEFS) $(SIMP_DEFS)
TOOL_ADEF=$(UTIL_DEFS) $(SIMP_DEFS) $(TOOLS_DEFS)

# Lists of dependencies on configuration files 
# These are added to lists of dependencies generated by $(MAKEDEP)
UTIL_CFGS= -A$(BLD_DIR)/config.mk
UTIL_CFGS+= -A$(BLD_DIR)/util/config.mk
SIMP_CFGS= $(UTIL_CFGS)
SIMP_CFGS+= -A$(BLD_DIR)/simp/config.mk
TOOL_CFGS= $(SIMP_CFGS)
TOOL_CFGS+= -A$(BLD_DIR)/tools/config.mk

# All libraries needed by files in src/tools
LIBS=$(tools_LIB) $(simp_LIB) $(util_LIB)

#-----------------------------------------------------------------------
# Pattern rules

# Rule to compile all *.cpp class source files in src/tools
$(BLD_DIR)/tools/%.o: $(SRC_DIR)/tools/%.cpp
	$(CXX) $(INCLUDES) $(TOOL_ADEF) $(CXXFLAGS) -c -o $@ $<
ifdef MAKEDEP
	$(MAKEDEP) $(INCLUDES) $(TOOL_ADEF) $(CXXFLAGS) $(TOOL_CFGS) -S$(SRC_DIR) -B$(BLD_DIR) $<
endif

# Rule to compile all *.cpp class source files in src/simp
$(BLD_DIR)/simp/%.o: $(SRC_DIR)/simp/%.cpp
	$(CXX) $(INCLUDES) $(SIMP_ADEF) $(CXXFLAGS) -c -o $@ $<
ifdef MAKEDEP
	$(MAKEDEP) $(INCLUDES) $(SIMP_ADEF) $(CXXFLAGS) $(SIMP_CFGS) -S$(SRC_DIR) -B$(BLD_DIR) $<
endif

# Rule to compile all *.cpp class source files in src/util
$(BLD_DIR)/util/%.o: $(SRC_DIR)/util/%.cpp
	$(CXX) $(INCLUDES) $(UTIL_ADEF) $(CXXFLAGS) -c -o $@ $<
ifdef MAKEDEP
	$(MAKEDEP) $(INCLUDES) $(UTIL_ADEF) $(CXXFLAGS) $(UTIL_CFGS) -S$(SRC_DIR) -B$(BLD_DIR) $<
endif

# Rule to compile all *.cc test programs in src/tools
$(BLD_DIR)/tools/tests/%.o: $(SRC_DIR)/tools/tests/%.cc
	$(CXX) $(INCLUDES) $(TOOL_ADEF) $(TESTFLAGS) -c -o $@ $<
ifdef MAKEDEP
	$(MAKEDEP) $(INCLUDES) $(TOOL_ADEF) $(TESTFLAGS) $(TOOL_CFGS) -S$(SRC_DIR) -B$(BLD_DIR) $<
endif

# Rule to link all *.cc test program executables in src/tools
$(BLD_DIR)/tools/tests/%: $(BLD_DIR)/tools/tests/%.o $(LIBS)
	$(CXX) -o $@ $< $(LIBS) $(LDFLAGS)

